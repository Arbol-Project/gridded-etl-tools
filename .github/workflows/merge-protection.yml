# merge-protection.yml
#
# Automatically perform remote unit tests using Github's servers on either a pull request or push to master

name: Run tests

# Trigger merge protection job to run on a push or pull request to master
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Steps to run for merge protection
jobs:
  unit-test:
    runs-on: ubuntu-22.04
    steps:

    # Install and launch an IPFS node
    - name: Install IPFS
      uses: ibnesayeed/setup-ipfs@master
      with:
        ipfs_version: "0.10"
        run_daemon: true
      id: ipfs_setup

    # Test installation of IPFS
    - name: Test IPFS ${{ steps.ipfs_setup.outputs.resolved_ipfs_version }} CLI and API
      shell: bash
      run: |
        set -o pipefail
        ipfs cat ${{ steps.ipfs_setup.outputs.welcome_ref }}/readme
        curl -sX POST http://localhost:5001/api/v0/version | jq -e '(.Version=="${{ steps.ipfs_setup.outputs.resolved_ipfs_version }}")'

    # Install external dependencies via APT
    - name: Install external dependencies via APT
      run: sudo apt-get update && sudo apt-get install cdo gdal-bin netcdf-bin libeccodes0

    # Checkout a copy of the repo
    - name: Check out repo
      uses: actions/checkout@v2

    # Install Python 3.10.9
    - name: Set up Python 3.10.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.9

    # Set up caching for PIP so packages can be reused on subsequent calls to Github Actions
    - name: Cache reusable files
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip/
        key: ${{ runner.os }}-dependencies

    # Install Python package requirements via pip
    - name: Install Python package requirements
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Run unit tests using pytest
    - name: Unit tests
      run: |
        cd tests/
        # Test with stdout enabled for debugging
        pytest -s
